% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/swat.R
\docType{class}
\name{CASDataMsgHandler-class}
\alias{CASDataMsgHandler-class}
\alias{CASDataMsgHandler}
\title{CAS Data Message Handler}
\arguments{
\item{data}{The \code{data.frame} to upload.}

\item{nrecs}{Optional parameter indicating the size of the
row buffer which is sent to the server.}

\item{locale}{Optional parameter indicating the client locale.}
}
\description{
Data message handlers are required when uploading data to the
server using the \code{table.addtable} action. Currently, only
binary CAS connections support the \code{table.addtable} action.
It is recommended to use \code{table.upload} if possible since
it works with all protocols.
}
\details{
All fields in the object are read-only. They are computed based
on the data in the constructor arguments.
}
\section{Fields}{

\describe{
\item{\code{data}}{The \code{data.frame} to upload.}

\item{\code{reclen}}{The byte-length of one buffer row.}

\item{\code{nbuffrows}}{The number of rows in the buffer.}

\item{\code{vars}}{List of lists containing the variable definitions.
These definitions correspond to the variable definitions used by the
\code{table.loadTable} action.}

\item{\code{ncols}}{Integer number of columns in the data.}

\item{\code{nrows}}{Integer number of rows in the data.}

\item{\code{finished}}{Logical indicating that the data message handler
has completed.}

\item{\code{sw_databuffer}}{Data buffer object in the C extension.}
}}

\section{Methods}{

\describe{
\item{\code{call(request, conn)}}{      Start the data upload loop. The \code{request} parameter is a
      \code{\link{CASRequest}} object containing information about
      the data request. \code{conn} is a CAS connection object.

      This method will loop as long as \code{CASDataMsgHandler$getrow()}
      returns data to upload. Once all data has been uploaded, the
      method returns a \code{\link{CASResponse}} for the upload
      action call.
       
      }

\item{\code{finish(conn)}}{Tell the server that you are finished sending data. }

\item{\code{getrow(row)}}{Return the row of data for the specified index. }

\item{\code{send(conn, nrecs)}}{      Send a buffer to the server. \code{conn} is a CAS connection object.
      \code{nrecs} is the number of records in the buffer to send.

      }

\item{\code{write(row, values)}}{      Write a set of values to a specified row in the buffer. The \code{row}
      parameter indicates the buffer row index. The \code{values} parameter
      is the list of values to write to the buffer. Each element in the list
      corresponds to a column in the buffer.

      }
}}

